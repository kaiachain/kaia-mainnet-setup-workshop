[
{
	"uri": "/klaytn-cypress-setup-workshop/10_prerequisites/10_firewall_configuration.html",
	"title": "Firewall Configuration",
	"tags": [],
	"description": "",
	"content": "\n1. (Only for CN) Firewall configuration 1) If Baobab validation is completed, remove below Klaytn CN\u0026rsquo;s IP addresses of Baobab from your firewall configuration. 54.180.180.202\n54.180.18.176\n52.79.134.72\n52.78.232.39 2) For communication and multichannel across CCO CNs in the Cypress network, TCP 32323-32324 and UDP 32323 from existing CCO\u0026rsquo;s CNs should be allowed in your CN firewall configuration. ** The existing CCO\u0026rsquo;s CNs IP addresses will be provided by Slack DM.\n3) For communication and multichannel across Bootnode in the Cypress network, UDP 32323 from existing CCO\u0026rsquo;s CNs should be allowed in your CN firewall configuration. ** The existing Bootnode IP addresses will be provided by Slack DM.\nIf you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/50_start_services/10_start_klaytn_service.html",
	"title": "Start the klaytn services",
	"tags": [],
	"description": "",
	"content": "\n1. Start the Klaytn service, if it is running. 1) For CN, $ sudo systemctl status kcnd $ sudo systemctl start kcnd $ sudo systemctl status kcnd 2) For PN, $ sudo systemctl status kpnd $ sudo systemctl start kpnd $ sudo systemctl status kpnd 3) If the services are not installed from yum, you can start the service like below, $ sudo \u0026lt;installation_path\u0026gt;/kcnd status $ sudo \u0026lt;installation_path\u0026gt;/kcnd start $ sudo \u0026lt;installation_path\u0026gt;/kcnd status If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/30_download_chaindata/10_download_chaindata.html",
	"title": "Download the latest Cypress chaindata",
	"tags": [],
	"description": "",
	"content": "\n1. Download the latest chaindata snapshot from the Cypress snapshot archive. 0) Before proceeding, please check if your disk space is enough to store and extract the Cypress chaindata. ** You can refer to the chaindata size via Cypress snapshot archive where the Cypress chaindata snapshots have been snapshotted.\n1) For CN ** Please note that this step will take a lot of time to download since snapshot is more than 1.4 TB. If you want to reduce the time, please refer the next step.\n** The latest chaindata name can be different with this example due to the date information. $ URL=`curl -s https://packages.klaytn.net/cypress/pruning-chaindata/ |grep latest |awk -F\u0026#39;\u0026#34;\u0026#39; \u0026#39;{print $2}\u0026#39;` $ echo $URL https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/cypress/pruning/klaytn-cypress-pruning-chaindata-20240131010111.tar.gz $ wget $URL\n2) For PN2 $ URL=`curl -s https://packages.klaytn.net/cypress/pruning-chaindata/ |grep latest |awk -F\u0026#39;\u0026#34;\u0026#39; \u0026#39;{print $2}\u0026#39;` $ echo $URL https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/cypress/pruning/klaytn-cypress-pruning-chaindata-20240131010111.tar.gz $ wget $URL 2) Optional - If you want to save the time for downloading, you can consider using axel command. **Axel tries to accelerate the download process by using multiple connections per file.\n1) For CN and PN1 (Amazon Linux 2) $ sudo amazon-linux-extras install epel (CentOS) $ sudo yum install epel-release -y $ sudo yum install axel -y $ URL=`curl -s https://packages.klaytn.net/cypress/pruning-chaindata/ |grep latest |awk -F\u0026#39;\u0026#34;\u0026#39; \u0026#39;{print $2}\u0026#39;` $ echo $URL https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/cypress/pruning/klaytn-cypress-pruning-chaindata-20240131010111.tar.gz $ axel -n8 $URL 2) For PN2 (Amazon Linux 2) $ sudo amazon-linux-extras install epel (CentOS) $ sudo yum install epel-release -y $ sudo yum install axel -y $ URL=`curl -s https://packages.klaytn.net/cypress/pruning-chaindata/ |grep latest |awk -F\u0026#39;\u0026#34;\u0026#39; \u0026#39;{print $2}\u0026#39;` $ echo $URL https://s3.ap-northeast-2.amazonaws.com/klaytn-chaindata/cypress/pruning/klaytn-cypress-pruning-chaindata-20240131010111.tar.gz $ axel -n8 $URL If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/20_network_reset/10_stop_klaytn.html",
	"title": "Stop the Klaytn service",
	"tags": [],
	"description": "",
	"content": "\n1. Stop the Klaytn service, if it is running. 1) For CN, $ sudo systemctl status kcnd $ sudo systemctl stop kcnd $ sudo systemctl status kcnd 2) For PN, $ sudo systemctl status kpnd $ sudo systemctl stop kpnd $ sudo systemctl status kpnd 3) If the services are not installed from yum, you can stop the service like below, $ sudo \u0026lt;installation_path\u0026gt;/kcnd status $ sudo \u0026lt;installation_path\u0026gt;/kcnd stop $ sudo \u0026lt;installation_path\u0026gt;/kcnd status If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/10_prerequisites.html",
	"title": "Prerequisites",
	"tags": [],
	"description": "",
	"content": "Chapter 1 Prerequisites The prerequisites for joining Cypress network are covered in this chapter.\nPlease click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/10_prerequisites/20_package_installation.html",
	"title": "Package Installation",
	"tags": [],
	"description": "",
	"content": "\n2. Installation of Klaytn packages for CN and PN ** We\u0026rsquo;ve already installed packages during the Pre-cypress stage. If you need to install newly, please refer these documents.\n1) CN - https://docs.klaytn.foundation/docs/nodes/core-cell/install/install-consensus-nodes/ 2) PN - https://docs.klaytn.foundation/docs/nodes/core-cell/install/install-proxy-nodes/ If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/50_start_services/20_start_monitoring_services.html",
	"title": "Start the monitoring services",
	"tags": [],
	"description": "",
	"content": "\n2. Start monitoring services. 1) For both CN and PN, start the Telegraf service. $ sudo systemctl status telegraf $ sudo systemctl start telegraf $ sudo systemctl status telegraf 2) For both CN and PN, start the Datadog service if it is stopped. $ sudo systemctl status datadog-agent $ sudo systemctl start datadog-agent $ sudo systemctl status datadog-agent If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/40_configure_network/10_node_configuration.html",
	"title": "Node Configuration",
	"tags": [],
	"description": "",
	"content": "\n1. Modify network, discovery and boot node information. ** Note that CN and PN have some different information.\n1) For CN, your configuration should be modified as shown below. $ egrep \u0026#34;^NETWORK|NO_DISCOVER|BOOTNODES|ADDITIONAL\u0026#34; /etc/kcnd/conf/kcnd.conf NETWORK=\u0026#34;cypress\u0026#34; NETWORK_ID= NO_DISCOVER=0 # setting 1 to disable discovery BOOTNODES=\u0026#34;kni://b286e4140aea469992146c299f8915e34d59a014c29a045de41e578014761114176f42dece34a54ce1e37f92ab981fe1bb14e54fe23576e1182778c40e6272a2@ston146.cypress.klaytn.net:32323?ntype=bn,kni://a6b61ee786952e3f8b681867d2535485622e80d0b9b7b89f26b2c631e59a4246b5f879487fbde7c324c3308ece0cdb1d7738430bdffce4f7f8c4f5a09eef80a3@ston738.cypress.klaytn.net:32323?ntype=bn,kni://b25838727eb6b4631c8f8910b4f6376fe28041f251ee21129078a61d18d62d0dc2601be5a97eab8bdb5772309f861fddb7192935483813ef20e5716a34266f16@ston903.cypress.klaytn.net:32323?ntype=bn\u0026#34; ADDITIONAL=\u0026#34;--state.trie-cache-limit 5000 --state.live-pruning\u0026#34; 2) For PN $ egrep \u0026#34;^NETWORK|NO_DISCOVER|BOOTNODES|ADDITIONAL\u0026#34; /etc/kpnd/conf/kpnd.conf NETWORK=\u0026#34;cypress\u0026#34; NETWORK_ID= NO_DISCOVER=1 # setting 1 to disable discovery BOOTNODES=\u0026#34;\u0026#34; ADDITIONAL=\u0026#34;--state.trie-cache-limit 5000 --state.live-pruning\u0026#34; If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/30_download_chaindata/20_unarchive_chaindata.html",
	"title": "Extract the chaindata",
	"tags": [],
	"description": "",
	"content": "\n2. Extract the chaindata downloaded to the DATA_DIR. 1) For CN, $ tar -C \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/data -xvf klaytn-cypress-pruning-chaindata-20240131010151.tar.gz --exclude klay/chaindata/receipts 2) For PN, $ tar -C \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/data -xvf klaytn-cypress-pruning-chaindata-20240131010151.tar.gz --exclude klay/chaindata/receipts If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/20_network_reset/20_stop_telegraf.html",
	"title": "Stop the Telegraf service",
	"tags": [],
	"description": "",
	"content": "\n2. Stop the Telegraf service, if it is running. 1) For both CN and PN, $ sudo systemctl status telegraf $ sudo systemctl stop telegraf $ sudo systemctl status telegraf If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/20_network_reset.html",
	"title": "Reset Network Configuration",
	"tags": [],
	"description": "",
	"content": "Chapter 2 Reset Network Configuration In this chapter, you will reset the Baobab network configuration. Please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/50_start_services/30_check_the_services.html",
	"title": "Check the services",
	"tags": [],
	"description": "",
	"content": "\n3. Watch the service log to confirm if your nodes are correctly joined. ** If the node is not a proposer at that block, and the consensus is successful, the node have executed(==validates) the block. In other words, a block is inserted. _** You can refer this document for more details about node log.\n1) For CN, $ tail \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/log/kcnd.out INFO Inserted a new block number=14 hash=13cbfc…f007fc txs=0 gas=0 elapsed=793.458µs processTxs=167ns finalize=157.708µs validateState=7.542µs totalWrite=443.417µs trieWrite=256.667µs 2) For PN, $ tail \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/log/kpnd.out INFO Inserted a new block number=14 hash=13cbfc…f007fc txs=0 gas=0 elapsed=793.458µs processTxs=167ns finalize=157.708µs validateState=7.542µs totalWrite=443.417µs trieWrite=256.667µs 3) Please note that the above message will be found when Klaytn operators add your node as a peer. So you may face the below messages instead. You can ignore error messages as below. It will disappear after some follow-up tasks from Klaytn operators. err=\u0026#34;Genesis block mismatch\u0026#34; err=\u0026#34;unauthorized address” If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/40_configure_network/20_pn_configuration.html",
	"title": "PN static-nodes.json",
	"tags": [],
	"description": "",
	"content": "\n2. Modify the static-nodes.json in your PN1 and PN2. Since the information in the static-nodes.json is different for each PN, we will inform each CCO individually by Slack DM. ** Please refer the diagram below and the docs to understand PNN(Proxy Node Network). https://docs.klaytn.foundation/docs/learn/#tiered-networks-\nPNN(Proxy Node Network) consists of PNs within the Cypress network topology.\nTypically, PNs maintain just one connection with a PN in a neighboring Core Cell. The number of peer connections is subject to change depending on the network configuration.\n** Please note that PN uses a static-nodes.json file to find out where to connect.\nIf you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/20_network_reset/30_remove_data_and_log.html",
	"title": "Remove chaindata and log",
	"tags": [],
	"description": "",
	"content": "\n3. Remove existing chaindata and log for the Baobab network. 0) During pre-cypress, you did set \u0026lt;klaytn_home_path\u0026gt; for Ansible deployment. But you can check this out if you can\u0026rsquo;t remember where your data directory is located. (CN) $ grep \u0026#34;DATA_DIR\u0026#34; /etc/kcnd/conf/kcnd.conf (PN) $ grep \u0026#34;DATA_DIR\u0026#34; /etc/kpnd/conf/kpnd.conf 1) For CN, $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/data/klay/chaindata $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/data/klay/lightchaindata $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kcnd/log/* 2) For PN, $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/data/klay/chaindata $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/data/klay/lightchaindata $ sudo rm -Rf \u0026lt;your_klaytn_home_path\u0026gt;/kpnd/log/* If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/30_download_chaindata.html",
	"title": "Fast Sync with Cypress",
	"tags": [],
	"description": "",
	"content": "Chapter 3 Fast Sync with Cypress chaindata Klaytn has been snapshotting Cypress chaindata once a day. In this chapter, we are going to explore where the snapshot is stored, and the latest chaindata snapshot of Cypress will be used to sync as fast as possible. Please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/50_start_services/40_check_monitoring_dashboard.html",
	"title": "Check Monitoring Dashboard",
	"tags": [],
	"description": "",
	"content": "\n4. Take a look at Grafana dashboard to confirm if your nodes are correctly joined to Cypress network. Link : Cypress Grafana ** You can refer this document to check your services further.\nhttps://docs.klaytn.foundation/docs/nodes/core-cell/install/install-proxy-nodes/#kpn-console- If your CN/PN Inter Connections looks 2 and blockNumber increases correctly in this dashboard, everything is configured normally. If you complete all the previous steps, please send a message to Klaytn DevOps by Slack. If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/40_configure_network.html",
	"title": "Configure Cypress Network",
	"tags": [],
	"description": "",
	"content": "Chapter 4 Configure Cypress Network Now, we are going to re-configure networks to join Cypress. Please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/50_start_services/50_remove_chaindata.html",
	"title": "Remove Chaindata",
	"tags": [],
	"description": "",
	"content": "\n1. Now, the donwloaded chaindata for Cypress can be removed, if you can confirm everything is done without any problem. 1) For both CN and PN, $ rm klaytn-cypress-chaindata-20220719010712.tar.gz If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/40_configure_network/30_telegraf_configuration.html",
	"title": "Telegraf Configuration",
	"tags": [],
	"description": "",
	"content": "\n1. To monitor your nodes in Cypress Dashboard, please change the influxdb configuration as below: 1) For both CN and PN, $ grep -A2 \u0026#34;influxdb\u0026#34; /etc/telegraf/telegraf.d/klaytn.conf [[outputs.influxdb]] urls = [ \u0026#34;http://13.209.53.161:45560\u0026#34; ] database = \u0026#34;klaytn_cypress\u0026#34; 2) Only for CN, Change the interval time of Telegraf agent from 10s to 1s.\n$ cat /etc/telegraf/telegraf.conf | grep -v \u0026#39;^\\s*$\\|^\\s*\\#\u0026#39; | grep interval interval = \u0026#34;1s\u0026#34; round_interval = true flush_interval = \u0026#34;1s\u0026#34;\nCreate a new configuration file klaytn_log.conf for monitoring Klaytn log, and copy/paste the below content. $ vi /etc/telegraf/telegraf.d/klaytn_log.conf [[inputs.tail]] # please use your DIR of the log files = [\u0026#34;\u0026lt;your_klaytn_home_path\u0026gt;/log/kcnd.out\u0026#34;] ## Read files that currently exist from the beginning. Files that are created ## while telegraf is running (and that match the \u0026#34;files\u0026#34; globs) will always ## be read from the beginning. from_beginning = false ## Method used to watch for file updates. Can be either \u0026#34;inotify\u0026#34; or \u0026#34;poll\u0026#34;. watch_method = \u0026#34;inotify\u0026#34; name_override = \u0026#34;klaytn_log\u0026#34; data_format = \u0026#34;value\u0026#34; data_type = \u0026#34;string\u0026#34; [[outputs.influxdb]] urls = [ \u0026#34;http://13.209.53.161:45560\u0026#34; ] database = \u0026#34;klaytn_logs\u0026#34;\nIf you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/50_start_services.html",
	"title": "Start the services",
	"tags": [],
	"description": "",
	"content": "Chapter 5 Start the services Now, we are ready to start Klaytn service for Cypress. Please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/40_configure_network/40_datadog_configuration.html",
	"title": "Datadog Configuration",
	"tags": [],
	"description": "",
	"content": "\n2. For additional monitoring, we are planning to use Datadog as well. Please follow this step for Datadog installation. 1) For CN, $ cat \u0026lt;\u0026lt;EOF\u0026gt;\u0026gt; dd_vars export DD_API_KEY=DATADOG API KEY export NETWORK=cypress export NODE_NAME=\u0026lt;cco_name\u0026gt;-cn-01 export NODE_TYPE=cn export INSTANCE=cn export LOG_DIR=\u0026lt;your_klaytn_home_path\u0026gt;/kcnd/log EOF $ source dd_vars $ bash -c \u0026#34;$(curl -L https://raw.githubusercontent.com/klaytn/datadog-agent-install./main/install-datadog-agent.sh)\u0026#34; ** DD_API_KEY will be shared with you by Slack DM.\n** Please use lowercase for NODE_NAME.\n** For example, LOG_DIR = /data/kcnd/log or /data/kcnd/logs, NODE_NAME=cco_name-cn-01\n2) For PN, $ cat \u0026lt;\u0026lt;EOF\u0026gt;\u0026gt; dd_vars export DD_API_KEY=DATADOG API KEY export NETWORK=cypress export NODE_NAME=\u0026lt;cco_name\u0026gt;-pn-01 or \u0026lt;cco_name\u0026gt;-pn-02 export NODE_TYPE=pn export INSTANCE=pn1 or pn2 LOG_DIR=\u0026lt;your_klaytn_home_path\u0026gt;/kpnd/log EOF $ source dd_vars $ bash -c \u0026#34;$(curl -L https://raw.githubusercontent.com/klaytn/datadog-agent-install./main/install-datadog-agent.sh)\u0026#34; ** DD_API_KEY will be shared with you by Slack DM.\n** Please use lowercase for NODE_NAME.\n** For example, LOG_DIR = /data/kpnd/log or /data/kpnd/logs, NODE_NAME=cco_name-pn-01 or cco_name-pn-02\n3. To allow your nodes to communicate Datadog, please add these IP addresses to the firewall of each node. Port number 443 3.233.144.0/20 Port number 10516 3.233.152.63/32 If you finish this step, please click the next button \u0026gt; on the right side of this page.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/60_conclusion.html",
	"title": "Conclusion",
	"tags": [],
	"description": "",
	"content": "\nCongratulations! Now, you are playing in the Cypress network. "
},
{
	"uri": "/klaytn-cypress-setup-workshop/",
	"title": "Klaytn - CCO Onboarding - Cypress",
	"tags": [],
	"description": "",
	"content": "\nCCO Onboarding - Cypress This online instruction let you join Klaytn Cypress network. If Consensus/Proxy node setup is already completed, you can start with chapter 2.\n"
},
{
	"uri": "/klaytn-cypress-setup-workshop/categories.html",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/klaytn-cypress-setup-workshop/tags.html",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]